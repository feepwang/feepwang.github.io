<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>feep!</title>
    <link>https://feep.wang/</link>
    <description>Recent content on feep!</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 12 Feb 2021 17:32:36 +0800</lastBuildDate><atom:link href="https://feep.wang/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>C&#43;&#43;的指针</title>
      <link>https://feep.wang/posts/c&#43;&#43;%E7%9A%84%E6%8C%87%E9%92%88/</link>
      <pubDate>Fri, 12 Feb 2021 17:32:36 +0800</pubDate>
      
      <guid>https://feep.wang/posts/c&#43;&#43;%E7%9A%84%E6%8C%87%E9%92%88/</guid>
      <description>C++普通指针 下面记录几个常用的C++普通指针的初始化：
  int *ptr1; int i = 10; int *ptr2 = &amp;amp;i;   int *ptr3 = new int; int *ptr4 = new int(100);   const与指针 const修饰符用来表示一个类型的常量。
 const的一般用法：  //	常量i const int const_i; //	常量引用 const int &amp;amp;const_reference_i;  const与指针  //	常量指针（指向常量的指针） const int * ptr_to_const; //	指针常量 int *const const_ptr; //	指向常量的指针常量 const int *const const_ptr_to_const; 智能指针 C++11引入了几类新的指针：shared_ptr、unique_ptr、weak_ptr。
  对比普通指针的new、delete命令，智能指针能自动管理内存空间的释放。
  智能指针可以看作一个系统内置的类模版。</description>
    </item>
    
  </channel>
</rss>
